//
//  ShowProfileInteractor.swift
//  ContractorApp
//
//  Created by Zaizen Kaegyoshi on 11/8/17.
//  Copyright (c) 2017 Team5. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Firebase
import Alamofire
import AlamofireImage

protocol ShowProfileBusinessLogic
{
//    func doSomething(request: ShowProfile.Something.Request)
    func fetchUser() 
}

protocol ShowProfileDataStore
{
    //var name: String { get set }
    var user: FirebaseAuth.User? { get set }
}

class ShowProfileInteractor: ShowProfileBusinessLogic, ShowProfileDataStore
{
    var presenter: ShowProfilePresentationLogic?
    var worker: ShowProfileWorker?
    //var name: String = ""
    var user: FirebaseAuth.User?
    
    // MARK: Do something
    
    func fetchUser() {
        self.user = Auth.auth().currentUser
        print(self.user?.photoURL)
        let imgURL = (self.user?.photoURL)!
        let name: String = (user?.displayName)!
        Alamofire.request(imgURL).responseImage(completionHandler: { (response) in
            if let image = response.result.value {
//                print("whaaa")
                let vm = ShowProfile.FetchUser.Response(name: name, image: image)
                self.presenter?.presentProfile(response: vm)
//                self.presenter?.presentBusiness(response: ShowBusinesses.FetchBusiness.Response(business: self.business))
            } else {
                let vm = ShowProfile.FetchUser.Response(name: name, image: #imageLiteral(resourceName: "placeholder"))
                self.presenter?.presentProfile(response: vm)
//                self.presenter?.presentBusiness(response: ShowBusinesses.FetchBusiness.Response(business: self.business))
            }
        })
//        let img: UIImage = user?.photoURL
        
    }
    
//    func doSomething(request: ShowProfile.Something.Request)
//    {
//        worker = ShowProfileWorker()
//        worker?.doSomeWork()
//        
//        let response = ShowProfile.Something.Response()
//        presenter?.presentSomething(response: response)
//    }
}
