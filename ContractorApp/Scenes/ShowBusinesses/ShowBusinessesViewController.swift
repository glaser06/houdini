//
//  ShowBusinessesViewController.swift
//  ContractorApp
//
//  Created by Zaizen Kaegyoshi on 10/25/17.
//  Copyright (c) 2017 Team5. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ShowBusinessesDisplayLogic: class
{
    func displayBusiness(viewModel: ShowBusinesses.FetchBusiness.ViewModel)
}

class ShowBusinessesViewController: UIViewController, ShowBusinessesDisplayLogic
{
    var interactor: ShowBusinessesBusinessLogic?
    var router: (NSObjectProtocol & ShowBusinessesRoutingLogic & ShowBusinessesDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = ShowBusinessesInteractor()
        let presenter = ShowBusinessesPresenter()
        let router = ShowBusinessesRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    var reviews: [ShowBusinesses.FetchBusiness.ViewModel.DisplayableReview] = []
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        self.navigationController?.navigationBar.isHidden = false
        self.reviewsTableView.register(UINib(nibName: "UserReviewTableViewCell", bundle: nil), forCellReuseIdentifier: "ReviewCell")
        self.reviewsTableView.rowHeight = UITableViewAutomaticDimension
        self.reviewsTableView.estimatedRowHeight = 150
//        self.navigationController?.clearShadow()
        self.reviewsTableView.tableFooterView = UIView()
        fetchBusiness()
    }
    override func viewWillAppear(_ animated: Bool) {
        self.navigationController?.setNavigationBarHidden(false, animated: false)
//        self.navigationController?.navigationBar.barTintColor = 
//        self.tabBarController?.tabBar.isHidden = true
    }
    override func viewDidAppear(_ animated: Bool) {
        self.navigationController?.setNavigationBarHidden(false, animated: false)
    }
    
    // MARK: Do something
    
    @IBOutlet weak var imageView: UIImageView!
    @IBOutlet weak var nameLabel: UILabel!
    @IBOutlet weak var descLabel: UILabel!
    @IBOutlet weak var reviewsTableView: UITableView!
    
    @IBOutlet weak var tableHeight: NSLayoutConstraint!
//    @IBOutlet weak var jobType: UILabel!
    
    func fetchBusiness() {
        self.interactor?.fetchBusiness()
    }
    func displayBusiness(viewModel: ShowBusinesses.FetchBusiness.ViewModel) {
        self.imageView.image = viewModel.image
        self.nameLabel.text = viewModel.name
        self.reviews = viewModel.reviews
        self.reviewsTableView.reloadData()
        let height = self.reviewsTableView.contentSize.height
        self.tableHeight.constant = height
        self.view.setNeedsLayout()
        self.view.layoutIfNeeded()
//        self.jobType.text = viewModel.businessType
        
    }
}
extension ShowBusinessesViewController: UITableViewDataSource {
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
        
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.reviews.count
        
    }
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "ReviewCell") as! UserReviewTableViewCell
        let review = self.reviews[indexPath.row]
        cell.setCell(name: review.name, desc: review.review, review.img)
        return cell
    }
}
