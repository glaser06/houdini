//
//  AddMultimediaViewController.swift
//  ContractorApp
//
//  Created by Zaizen Kaegyoshi on 10/25/17.
//  Copyright (c) 2017 Team5. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SwiftyCam


protocol AddMultimediaDisplayLogic: class
{
    func dismiss()
}

class AddMultimediaViewController: SwiftyCamViewController, AddMultimediaDisplayLogic
{
    var interactor: AddMultimediaBusinessLogic?
    var router: (NSObjectProtocol & AddMultimediaRoutingLogic & AddMultimediaDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = AddMultimediaInteractor()
        let presenter = AddMultimediaPresenter()
        let router = AddMultimediaRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    var didTake: Bool = false
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        self.cameraDelegate = self
//        let camButton = SwiftyCamButton(frame: self.camButton.frame)
        camButton.delegate = self
        
    }
    
    // MARK: Do something
    
    @IBOutlet weak var camButton: SwiftyCamButton!
    
    @IBAction func close () {
        dismiss()
    }
    
    func dismiss() {
        self.dismiss(animated: true, completion: nil)
    }
}
extension AddMultimediaViewController: SwiftyCamViewControllerDelegate {
    func swiftyCam(_ swiftyCam: SwiftyCamViewController, didTake photo: UIImage) {
        self.interactor?.addPhoto(request: AddMultimedia.AddPhoto.Request(image: photo))
        didTake = true
        if !didTake {
            
        }
        
        
//        self.dismiss(animated: true, completion: nil)
    }
    func swiftyCam(_ swiftyCam: SwiftyCamViewController, didFinishProcessVideoAt url: URL) {
        self.dismiss(animated: true, completion: nil)
    }
}

